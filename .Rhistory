}
apply(myData,1,function(x) assignValue(x,0))
myData<-read.csv("activity.csv")
resMean<-aggregate(myData$steps, by=list(myData$date), function(x) mean(x, na.rm=TRUE)  )
resMedian<-aggregate(myData$steps, by=list(myData$date), median ,na.rm=TRUE)
assignValue<-function(x,newValue){
res<-x
if(is.na(x$step)) {
res$step<-newValue
}
res
}
apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[2])) {
res$step<-newValue
}
res
}
apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
print(x[2])
if(is.na(x[2])) {
res$step<-newValue
}
res
}
apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
print("hello"+x[2])
if(is.na(x[2])) {
res$step<-newValue
}
res
}
apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
print("hello")
print(x[2])
print("geege")
if(is.na(x[2])) {
res$step<-newValue
}
res
}
apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
print("hello")
print(x[2])
print("geege")
if(is.na(x[2])) {
res$step<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
print("hello")
print(x[1])
print("geege")
if(is.na(x[1])) {
res$step<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[1])) {
print("hello")
print(x[1])
print("geege")
res$step<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[1])) {
print("hello")
print(x[1])
print("geege")
res[1]<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[1])) {
res[1]<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
z
head(z)
head(z,5)
summary(z)
str(z)
z<-lapply(myData$steps,function(x) assignValue(x,0))
str(z)
summary(z)
head(z)
head(myData$steps)
head(myData$steps,20)
head(myData$steps,80)
myData$steps
resMean
hist(res$x)
by(myData,1,mean)
res<-aggregate(myData$steps, by=list(myData$date), sum ,na.action=0 )
res<-aggregate(myData$steps, by=list(myData$date), sum , na.rm=TRUE, na.action=NULL )
#### Make a histogram of the total number of steps taken each day
hist(res$x)
res
subset(myData,date=="2012-10-03")
res
z<-lapply(myData$steps,function(x) assignValue(x,0))
z[335]
z
myData$steps
z<-apply(myData$steps,function(x) assignValue(x,0))
z<-apply(myData$steps,1,function(x) assignValue(x,0))
z<-apply(myData$steps,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[1])) {
res[1]<-newValue
}
res
}
z<-apply(myData$steps,1,function(x) assignValue(x,0))
assignValue<-function(x,newValue){
res<-x
if(is.na(x[1])) {
res[1]<-newValue
}
res
}
z<-apply(myData,1,function(x) assignValue(x,0))
str(z)
z
head(z)
resMean
library(dplyr)
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
res1<-src[Group.1==x,1]
}
res1
}
resMean
tail(myData)
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
res1<-src[Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = myf(resMean, steps ,resMean))
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
res1<-src[Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
assignValue<-function(x,step,src){
res1<-step
print(step)
if(is.na(step))
{
res1<-src[Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
myData
head(myData)
{
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
print("in")
print(step)
res1<-src[Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
resMean
resMean
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
print("in")
print(step)
res1<-src[Group.1==x,]$x
}
res1
}
head(myData)
head(myData)
head(myData)
myData
myData<-read.csv("activity.csv")
myData<-read.csv("activity.csv")
resMean<-aggregate(myData$steps, by=list(myData$date), function(x) mean(x, na.rm=TRUE)  )
library(dplyr)
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
print("in")
print(step)
res1<-src[Group.1==x,]$x
}
res1
}
head(myData)
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
assignValue<-function(x,step,src){
res1<-step
if(is.na(step))
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
assignValue<-function(x,step,src){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
res1
}
mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
head(myData)
assignValue<-function(x,step,src){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
res1
}
k<-mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
k
assignValue<-function(x,step,src){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
res1
}
k<-mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
head(k)
assignValue<-function(x,step,src){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
res1
}
k<-mutate(myData, stepMedium = assignValue(resMean, steps ,resMean))
head(k)
is.na(AQ2)
is.na(myData)
myData[is.na(myData)]
numberValues<-nrow(myData)-nrow(na.omit(myData))
print(numberValues)
nrow(myData[is.na(myData)])
length(myData[is.na(myData)]))
length(myData[is.na(myData)])
head(myData[is.na(myData)])
myData[is.na(myData$steps),]
head(myData)
resMean[myData[is.na(myData$steps),"date"]]
myData[is.na(myData$steps),"date"]
length(myData[is.na(myData$steps),"date"])
str(resMean)
nrow(resMean)
assignValue<-function(z,g){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
1
}
mutate(myData,new=assignValue(steps,date))
assignValue<-function(steps,date){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
1
}
mutate(myData,new=assignValue(steps,date))
assignValue<-function(step,date){
res1<-step
if(is.na(step)==TRUE)
{
print("in")
print(step)
res1<-src[src$Group.1==x,]$x
}
1
}
mutate(myData,new=assignValue(steps,date))
names(resMean)
names(resMean)<<-c("altSteps","date")
names(resMean)<-c("altSteps","date")
myDataBis<-inner_join(myData,resMean)
head(resMean)
names(resMean)<-c("date","altSteps")
myDataBis<-inner_join(myData,resMean)
myDataBis
nrow(myDataBis)
head(myDataBis)
myData[myData$date=="2012-10-01",]$date
myData[myData$date=="2012-10-01",]$steps
avgSteps<-aggregate(myData$steps, by=list(myData$interval), mean ,na.rm=TRUE)
avgSteps
names(avgSteps)
myDataBis<-inner_join(myData,resMean)
myDataBis<-inner_join(myData,avgSteps)
head(avgSteps)
names(avgSteps)<-c("interval","altSteps")
myDataBis<-inner_join(myData,avgSteps)
myDataBis
head(myDataBis)
nrow(myDataBis)
myDataBis[is.na(myDataBis$steps),"steps"]<-myDataBis[is.na(myDataBis$steps),"altSteps"]
head(myDataBis)
nrow(myDataBis)
dateV<-as.Date(myDataBis$date, format="%Y-%m-%d")
weeks<-weekdays(dateV, abbr = TRUE)
head(weeks)
str(weeks)
weeks[weeks=="sam."]
length(weeks[weeks=="sam."])
length(weeks[weeks %in%c("sam.","dim.")])
length(weeks[weeks %in%c("dim.")])
length(weeks[weeks %in%c("lun.")])
length(weeks[weeks %in%c("mar.")])
ength(weeks[weeks %in%c("sam.")])
length(weeks[weeks %in%c("sam.")])
myDataBis$dateFormatted<-as.Date(myDataBis$date, format="%Y-%m-%d")
myDataBis$weeks<-weekdays(myDataBis$dateFormatted, abbr = TRUE)
length(myDataBis$weeks[myDataBis$weeks %in%c("sam.")])
myData$dateFormatted<-as.Date(myData$date, format="%Y-%m-%d")
myData$weeks<-weekdays(myData$dateFormatted, abbr = TRUE)
length(myData$weeks[myData$weeks %in%c("sam.")])
myData[is.na(myData$steps),]
myData[is.na(myData$steps),"weeks"]
unique(myData[is.na(myData$steps),"weeks"])
View(myData)
par(mfrow=c(4,1))
myData<-read.csv("activity.csv")
myData$date<-as.factor(myData$date)
res<-aggregate(myData$steps, by=list(myData$date), sum , na.rm=TRUE, na.action=NULL )
hist(res$x)
hist(res$x)
par(mfrow=c(1,1))
hist(res$x)
resMean<-aggregate(myData$steps, by=list(myData$date), function(x) mean(x, na.rm=TRUE)  )
resMean
resMedian
resMedian<-aggregate(myData$steps, by=list(myData$date), median ,na.rm=TRUE)
resMedian
library(dplyr)
names(avgSteps)<-c("interval","altSteps")
head(avgSteps)
myDataBis<-inner_join(myData,avgSteps)
myDataBis[is.na(myDataBis$steps),"steps"]<-myDataBis[is.na(myDataBis$steps),"altSteps"]
myDataBis[is.na(myDataBis$steps),"steps"]
myDataBis[is.na(myDataBis$steps),"steps"]
head(myDataBis)
nrow(myDataBis)
myDataBis$dateFormatted<-as.Date(myDataBis$date, format="%Y-%m-%d")
myDataBis$weeks<-weekdays(myDataBis$dateFormatted, abbr = TRUE)
myDataWeekEnd<-myDataBis$weeks[myDataBis$weeks %in%c("sam.","dim.")]
myDataWeekEnd<-myDataBis$weeks[myDataBis$weeks %in%c("sam.","dim."),]
myDataWeekIn<-myDataBis$weeks[myDataBis$weeks %in%c("lun.","mar.","mer.","jeu.","ven."),]
myDataWeekEnd<-myDataBis[myDataBis$weeks %in%c("sam.","dim."),]
myDataWeekIn<-myDataBis[myDataBis$weeks %in%c("lun.","mar.","mer.","jeu.","ven."),]
par(mfrow=c(2,1))
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$date), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekEnd$Group.1, y=resMeanWeekEnd$x,type="l" ,xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$date), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l" ,xlab="intervals",ylab="average steps")
resMeanWeekIn
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$interval), function(x) mean(x, na.rm=TRUE)  )
p
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekEnd$Group.1, y=resMeanWeekEnd$x,type="l" ,xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l" ,xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l" ,xlab="intervals",ylab="average steps")
par(mfrow=c(1,2))
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekEnd$Group.1, y=resMeanWeekEnd$x,type="l" ,xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l" ,xlab="intervals",ylab="average steps")
par(mfrow=c(1,2))
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekEnd$Group.1, y=resMeanWeekEnd$x,type="l" ,main="weekend steps",xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l",main="weekIn steps" ,xlab="intervals",ylab="average steps")
read.csv("activity.csv")
View(myData)
myDataWeekIn
library(dplyr)
par(mfrow=c(1,2))
resMeanWeekEnd<-aggregate(myDataWeekEnd$steps, by=list(myDataWeekEnd$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekEnd$Group.1, y=resMeanWeekEnd$x,type="l" ,main="weekend steps",xlab="intervals",ylab="average steps")
resMeanWeekIn<-aggregate(myDataWeekIn$steps, by=list(myDataWeekIn$interval), function(x) mean(x, na.rm=TRUE)  )
plot(x=resMeanWeekIn$Group.1, y=resMeanWeekIn$x,type="l",main="weekIn steps" ,xlab="intervals",ylab="average steps")
resMedian[is.na(resMedian$steps),"steps"]<-0
resMean[is.na(resMean$steps),"steps"]
resMean
resMean[is.na(resMean$steps),]
head(resMean)
resMean[is.na(resMean$x),]<-0
resMean
resMean<-aggregate(myData$steps, by=list(myData$date), function(x) mean(x, na.rm=TRUE)  )
resMean[is.na(resMean$x),"x"]<-0
head(resMean)
resMedian<-aggregate(myData$steps, by=list(myData$date), median ,na.rm=TRUE)
resMedian[is.na(resMedian$x),"x"]<-0
print(head(res))
View(myDataBis)
avgStepsBis
myDataBis[is.na(myDataBis$steps),"steps"]<-myDataBis[is.na(myDataBis$steps),"altSteps"]
avgStepsBis<-aggregate(myDataBis$steps, by=list(myDataBis$date), mean ,na.rm=TRUE)
avgStepsBis
testz<-hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day")
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=8)
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=1)
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=2)
testz<-hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=2)
plot(testz)
testz<-hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=2)
testz<-hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",breaks=2)
plot(testz)
hist(testz)
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day")
clr<-c("blue","green","pink","red","gray")
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",col=clr)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr,break=4)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr,breaks=4)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr,breaks=5)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr,breaks=5)
hist(res$x,main="histogram of total steps (deleting  NA Values)",xlab="total steps in a day",col=clr)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day")
avgStepsBis
nrow(myDataBis)
avgStepsBis<-aggregate(myDataBis$steps, by=list(myDataBis$date), sum ,na.rm=TRUE)
head(avgStepsBis)
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day")
hist(avgStepsBis$x,main="histogram of total steps by NA using averages",xlab="total steps in a day",col=clr)
res<-aggregate(myData$steps, by=list(myData$date), sum , na.rm=TRUE, na.action=NULL )
names(res)<-c("date","total.number.steps")
print(head(res))
avgSteps<-aggregate(myData$steps, by=list(myData$interval), mean ,na.rm=TRUE)
resMedian
resMedian<-aggregate(myData$steps, by=list(myData$date), median ,na.rm=TRUE)
library(dplyr)
par(mfrow=c(1,1))
myData<-read.csv("activity.csv")
resMedian<-aggregate(myData$steps, by=list(myData$date), median ,na.rm=TRUE)
resMedian
names(resMedian)
resMedian[is.na(resMedian$x),"x"]<-0
